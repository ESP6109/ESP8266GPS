#include <Arduino.h>
#include <u8g2lib.h>
U8G2_ST7920_128X32_F_SW_SPI
// u8g2(U8G2_R0, E , RW , RS , RST);
u8g2(U8G2_R0, 14, 4, 5, 12); // D5 D2 D1 D6
void clearscr();
void manager();
void setup_shot();
void lcd();
void test();

void setup()
{
  u8g2.begin();
  Serial.begin(74800);
  u8g2.enableUTF8Print();
  test();
  clearscr();
  manager();
  pinMode(2, OUTPUT);
  pinMode(0, INPUT);
}

void clearscr()
{
  u8g2.clearBuffer();
  u8g2.drawBox(0, 0, 122, 32);
  u8g2.sendBuffer();
  delay(100);
  u8g2.clearBuffer();
  u8g2.sendBuffer();
}

void manager()
{
  unsigned int i, j = 0;
  i = millis() / 1000;
  while (5 - i > 0)
  {
    if (!digitalRead(0))
    {
      delay(20);
      j = (j + 1) % 2;
    }
    i = millis() / 1000;
    u8g2.clearBuffer();
    // u8g2.setFont(u8g2_font_wqy16_t_gb2312);
    u8g2.setFont(u8g2_font_t0_16_mf);
    u8g2.setCursor(10, 10);
    // u8g2.printf("启动管理器");
    u8g2.printf("Start Manager");
    u8g2.setCursor(105, 30);
    u8g2.printf("%d", 5 - i);
    u8g2.setCursor(21, 30);
    u8g2.printf("%d", j + 1);
    u8g2.sendBuffer();
    delay(1);
  }
  switch (j)
  {
  case 0:
    setup_shot();
    // case 1:
  }
}

void setup_shot()
{
  int i = 45, j = 0;
  u8g2.setFont(u8g2_font_wqy12_t_gb2312b);
  u8g2.setFontDirection(0);
  for (; i <= 152; ++i)
  {
    u8g2.clearBuffer();
    u8g2.setCursor(70, 9);
    u8g2.printf("PENIS");
    u8g2.setCursor(65, 32);
    u8g2.printf("CUMING%d", millis() / 1000);
    u8g2.drawDisc(8, 8, 8, U8G2_DRAW_ALL);
    u8g2.drawDisc(8, 23, 8, U8G2_DRAW_ALL);
    u8g2.drawBox(3, 10, 45, 14);
    u8g2.drawFilledEllipse(45, 16, 8, 9);
    u8g2.drawDisc(i, 16, 3, U8G2_DRAW_ALL);
    u8g2.drawDisc(i - 25, 16, 3, U8G2_DRAW_ALL);
    if (i >= 90)
    {
      u8g2.drawDisc(i - 50, 16, 3, U8G2_DRAW_ALL);
      u8g2.drawDisc(i - 75, 16, 3, U8G2_DRAW_ALL);
    }
    u8g2.sendBuffer();
    delay(1);
    /*if (i >= 132)
    {
      i = 107;
      ++j;
    }
    if (j >= 1 || !digitalRead(0))
      break;*/
  }
}

void lcd()
{
  int i = 64, j = 4;
  while (i <= 280)
  {
    u8g2.clearBuffer();
    // u8g2.setFont(u8g2_font_siji_t_6x10);
    u8g2.setFont(u8g2_font_open_iconic_all_2x_t);
    u8g2.drawGlyph(7, 24, i);
    u8g2.drawGlyph(30, 24, i + 1);
    u8g2.drawGlyph(53, 24, i + 2);
    u8g2.drawGlyph(76, 24, i + 3);
    u8g2.drawGlyph(99, 24, i + 4);
    // u8g2.drawBox(7,8,16,16);
    // u8g2.drawBox(30,8,16,16);
    u8g2.drawRFrame(j, 6, 22, 20, 3);
    // u8g2.drawRFrame(27,6,22,20,3);
    // u8g2.drawRFrame(50,5,22,20,3);
    u8g2.setFontDirection(0);
    u8g2.setCursor(90, 16);
    // u8g2.printf("%d",i);
    Serial.printf("%d", i);
    u8g2.sendBuffer();
    // ++i;
    j += 23;
    if (j >= 119)
    {
      j = 4;
      i += 5;
    }
    delay(750);
    // j = !j;
    if (i >= 280)
      i = 64;

    digitalWrite(2, j % 2);
  }
}

void loop()
{
  delay(500);
  // Serial.printf("%d",i);
  lcd();
  // setup_shot();
}

void test()
{
  int i, j;
  for (i = 1; i <= 7; ++i)
  {
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_wqy12_t_gb2312b);
    u8g2.setCursor(13, 10);
    u8g2.printf("Built on ESP Tech.%d", millis() / 1000);
    for (j = -2; j <= i; ++j)
      u8g2.drawBox(-13 + 17 * j, 18, 12, 14);
    u8g2.sendBuffer();
    delay(1000);
  }
  setup_shot();
  while (1)
    delay(1);
}

/*void test()
{
  int i=8;
  while(i<=11)
  {
    u8g2.clearBuffer();
    // u8g2.drawBox(0,0,122,32);
    delay(1000);
    // u8g2.setDrawColor(0);
    u8g2.drawFilledEllipse(45,16,8,i);
    u8g2.sendBuffer();
    ++i;
    if(i>=11)i=8;
  }
}*/

/*for (j = 0; j <= 32; ++j)
{
  u8g2.clearBuffer();
  u8g2.drawBox(0, 0, 122, j);
  u8g2.sendBuffer();
  delay(1);
}
for (j = 0; j <= 32; ++j)
{
  u8g2.clearBuffer();
  u8g2.drawBox(0, j, 122, 32);
  u8g2.sendBuffer();
  delay(1);
}*/




